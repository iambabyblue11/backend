// server.js const express = require('express'); const socketio = require('socket.io'); const http = require('http'); const crypto = require('crypto'); const app = express(); const server = http.createServer(app); const io = socketio(server); // Encryption/decryption key const secretKey = 'your-secret-key'; // In a real-world scenario, you would use a more secure method // Socket.IO real-time connection io.on('connection', (socket) => { console.log('a user connected'); // Encrypt and send message socket.on('message', (msg) => { const encryptedMessage = encryptMessage(msg); io.emit('message', encryptedMessage); }); socket.on('disconnect', () => { console.log('user disconnected'); }); }); // Simple encryption function using Crypto function encryptMessage(message) { let cipher = crypto.createCipher('aes-256-cbc', secretKey); let encrypted = cipher.update(message, 'utf8', 'hex'); encrypted += cipher.final('hex'); return encrypted; } server.listen(3000, () => { console.log('server running on http://localhost:3000'); });
